========================================
All the process should follow 
read.me file

this is just purpose of note the process
mac OSX 10.13.2
========================================




* 1: deployed the web using fastly-test-blog page

    https://blog-fastly.herokuapp.com


* 2: create new service 

    server address : https://blog-fastly.herokuapp.com
    domain name:   blog-fastly.herokuapp.com

    (don't add / at the end)
    (port 80 - non SSL)


 * 3: Test your application

    * test URL: Testing setup before changing domains
        After you deploy your service, 
        but before you change your DNS entries to send your domain to our servers, 
        you can check to see how your service is pulled through the network.

        * Test case 1 : use Web UI - click configure then 
            click "Test the domain" to see how your service is being pulled through the network. 

        * Test case 2: using command line

            * Determining the IP address of a Fastly POP

                $ dig nonssl.global.fastly.net
                // as mac doesn't have nslookup 
                    ;; ANSWER SECTION:
                    nonssl.global.fastly.net. 30	IN	A	151.101.60.204

                Compare to the document I have this extra line ++++++++++++++++++++ to do : check
                    ;; OPT PSEUDOSECTION:
                    ; EDNS: version: 0, flags:; udp: 8192
                    ;; QUESTION SECTION:
                    ;nonssl.global.fastly.net.	IN	A

            * Modifying your host file ++++++++ skipped to do: later
                    run below 
                        151.101.60.204 blog-fastly.herokuapp.com
                    hosts file is /etc/hosts 
                    then save

            * Testing your domain ++++++++++++++++skipped
                        ping blog-fastly.herokuapp.com
                    should display Fastly POP address 151.101.56.204
                    Be sure to remove the host entry from your hosts file 
                    after you make CNAME changes to point your domain to Fastly.
 
 
     * test cURL

            * test case 1: use web interface 
                click "Configure" then click "Check Cache button"
                the window pop up so put 
                    https://blog-fastly.herokuapp.com
                    (or anything like https://blog-fastly.herokuapp.com/articles/4)
                    it will show you the cache 

                If the content hash (Fastly-Debug-Digest) is different across nodes, 
                that usually indicates that there's a caching problem.
                --------------------------------------------------------------------
                Check "Contect hash" under debug info column 
                    out come was all fine, all the same in my case

            * test case 2 : use cURL

                * simple cURL command 
                    curl -svo /dev/null blog-fastly.herokuapp.com
                    it should show someting similar to one below but nothing like that was print 
                        < Age: 142
                        < X-Served-By: cache-jfk1041-JFK, cache-ord1720-ORD
                        < X-Cache: HIT, HIT
                        < X-Cache-Hits: 1, 7

                    instead 
                        Cache-Control: public, no-cache

                    Because TTL is set to 0 on the original
                    regarding to the web interface 
                        TTL (M cache-itm18820-ITM - - 0)

                    instead use below as instructed
                        curl -svo /dev/null blog-fastly.herokuapp.com.global.prod.fastly.net
                    Then it's all fine in my case
                        < Age: 1765
                        < Connection: keep-alive
                        < X-Served-By: cache-lhr6322-LHR
                        < X-Cache: HIT
                        < X-Cache-Hits: 1
                     shielding is enabled on as cache-lhr6322-LHR is shown 
                     (Shield node === designated pop, HIT on shield datacenter so it was in the cache)

                 * Using a Fastly-Debug header with cURL

                     curl -svo /dev/null -H "Fastly-Debug:1" blog-fastly.herokuapp.com.global.prod.fastly.net

                        < Surrogate-Control: max-age=86400
                        < Surrogate-Key: articles articles/1 articles/2 articles/3 articles/4
                        [...]
                        < Age: 3051
                        < Connection: keep-alive
                        < Fastly-Debug-Path: (D cache-lhr6346-LHR 1518822567) (F cache-lhr6337-LHR 1518819516)
                        < Fastly-Debug-TTL: (H cache-lhr6346-LHR - - 3051) 
                        < Fastly-Debug-Digest: a6b29f2d4f5d43a7e0e65ab6f2792549d6b7326b84052b73a5b9b6df4726deac
                        < X-Served-By: cache-lhr6346-LHR
                        < X-Cache: HIT
                        < X-Cache-Hits: 1

                    The Fastly-Debug header provides additional information
                    Because surrogate keys are present, the Fastly-Debug header exposes them ++++++ what is surrogate key?

                    * about Fastly-Debug Path header  
                        D represents which cache by name in the edge or shield ran vcl_deliver ++++ todo: what function are they?
                        F represents which cache by name in the edge or shield ran vcl_fetch ++++++


* 4: Changing the TTL for the Article pages
        
        Here you must do extra steps:
        Click "configure" then click current version such as version 1,
        Menu appears on left side but you cannot write anything unless you clone the current version 
        from "Option" on right top corner
        This is how you can start developing the next version. 
        
        once you have add what you need to add on 
        new cache setting, click "Attach a condition" - 
        right side of the cache setting "article page 2min"
        
        Click the "Activate" button 


* 5: Instant Purge
    After creating your cache setting for the Article pages, 
    you’ll need to purge any previously cached pages in order to see your new setting.
    
     * surrogate key 
        a way to tag related content, such as product information and images
        purge groups of specific URLs
        
        check header
            curl -I blog-fastly.herokuapp.com
        it shows line including
            Surrogate-Key: articles articles/1 articles/3 articles/4 articles/6
        
        one surrogate key can be associate with more than one object 
        and can kill all the object associate with the key

     * purge 
        select from drop dowm menu of "Purge" on top left corner
        happens about in 5 sec 
        
        Purge all 
            purging all chache
                Do not purge all cached content if you are seeing 503 errors               
                It will increases the requests to your origin server
                
        Purge URL
            individual cache 
            Full URL path: such as /article/4
            
        Purge Key
            using surrogate key to purge multiple indivisual path
        
        ++++++++++ todo: when soft purge is useful???  emailed
        ++++++++++ todo: if purge url was not existing how do you know??? emailed
        
     * other mehod:
        Authenticating URL purge requests van be done via API to just follow here
        https://docs.fastly.com/guides/purging/authenticating-api-purge-requests
        
 * 6: Origin Shielding
 
    Clone from "Option"
    Click the Origins link from left
    Click name of host, The "Edit this host page" appears
    Select "London LCY" From the Shielding menu
    Click "Update"
    Click "Active"

    Because of shild is set, so now curl to check debugger shows
    both Shield and edge
        < X-Served-By: cache-lcy19246-LCY, cache-lhr6330-LHR
        < X-Cache: MISS, MISS
        < X-Cache-Hits: 0, 0
        < X-Timer: S1518995908.290193,VS0,VE37

------------------------------------------------------------------------------------------------
=========================
Some more understanding
=========================

* Hit and Miss

    request for an object using the above cURL command
    curl -svo /dev/null www.example.com
    
    it produces
    
        X-Served-By: cache-iad2120-IAD, cache-sjc3120-SJC
            X-Served-By means shild is turnd on     
            1st one: serving as the delivering cache node at the shield datacenter (shield node)
            2nd one: serving as the delivering cache node at the "local" datacenter (edge node)

        X-Cache: MISS, MISS
            1st refers to shield datacenter
            2nd refers to "local" datacenter
            MISS - could note find the object
        X-Cache-Hits: 0, 0
            The same as above 0 to MISS 1 to HIT

    We expect to change the out come to this after while             
        X-Served-By: cache-iad2120-IAD, cache-sjc3122-SJC
        X-Cache: MISS, HIT
        X-Cache-Hits: 0, 1   
    
    if the closest delivering cache node exists in the shield datacenter
        X-Served-By: cache-iad2120-IAD
        X-Cache: HIT
        X-Cache-Hits: 1


* Debug info +++++++++++++++++++++++++++++++++++++++++++++++++ need to check - have asked by e-mail.
    The Fastly-Debug Path
            (D cache-fjr7922-FJR 1518996169) (F cache-fjr7922-FJR 1518995041) 
            (D cache-lcy19237-LCY 1518995040) (F cache-lcy19248-LCY 1518995040)
    
        which nodes handled fetching and delivery of an object, 
        as well as object TTL information (Edge PoP on first, Shield PoP second)
    
            D: refers to which node ran vcl_deliver
            F: refers to which node ran vcl_fetch
            H: refers to a HIT
            M: refers to a MISS
            The number following specific server name is a time stamp in seconds
    
    Fastly-Debug-TTL
            (H cache-fjr7922-FJR 85270.622 0.000 1129) 
            (H cache-lcy19237-LCY 86399.498 0.000 1)
        
        provides information on HIT and MISS timings.
            H represents a HIT
            M represents a MISS
            For each of these timings:

            the first number - TTL remaining for the object
            the second number - grace period
            the third number specifies the current age of the object in cache
    
    
    
* Healthcheck
    
    Go and clone version then "Create Health Check"
    https://docs.fastly.com/guides/basic-configuration/working-with-health-checks

* Shielding
    
    shield pop get cashed contecnts along to POP (A)
    When request goes through another pop, the contents will be cashed from the shielding
    It's another node behind POP 
    ++++++++++++++ I presume cache to POP and shielding are asynchronous request : todo ASK
        subsequently fetch the resource from your origin
    Shielding is not taken into account when calculating the global hit ratio
    
    * Caveats of shielding
    https://docs.fastly.com/guides/performance-tuning/shielding#caveats-of-shielding

        if when you change host header (of service B) to a different host name which already exist(service A)
        Edge server thinks the request is for the actual service (service B) but shield thinks it's for service A.
        So when you wanna purge object from both purge A & B but it will be confusing
        +++++++ I presume there might be shield try to serve the one wanted to put get to edge server


        Say you want Fastly to cache an object for one hour (3600 seconds) 
        and then ten seconds on the browser. 
        use Surrogate-Control and Cache-Control response headers.
        Surrogate-Control overrides Cache-Control and is stripped after the edge node
        Changes to beresp and resp will affect edge server with max-age=10
    

    
    
